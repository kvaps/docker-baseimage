#!/bin/bash
#
# Persistent data binding script.
#
# Usage:
#    load_stor [CONFIG]
#

print_spaces() {
    spaces_count=$[ $2 - ${#1} ]
    eval 'printf "%0.s " {1..'$spaces_count'}'
}

script_name="$(basename $0)"
config_name="stor.conf.sh"

# Checking config
if [ ! -z $1 ]; then
    config_file="$1"
elif [ -f $config_name ]; then
    config_file="$config_name"
elif [ -f /etc/image/$config_name ]; then
    config_file="/etc/image/$config_name"
fi

# Error if config not found
if [ ! -f "$config_file" ]; then
    >&2 echo "${script_name}: Cannot load ${config_file:=$config_name}: file does not exist."
else

    # Load config
    source $config_file
    
    # Start mapping directories (targets)
    echo "STORAGE   TARGET                                          ACTION"
    echo "--------------------------------------------------------------------------------"
    for storage in "${VOLUMES[@]}"; do
    
        # Default config dirs
        configdirs=($(eval echo '${VOLUME_'${storage^^}'[@]}'))
        stripnum="$(eval echo '$VOLUME_'${storage^^}'_STRIP')"
        stripnum="${stripnum:-1}"
    
        # User definded dirs
        userdirs=($(env | grep -P '^'${storage^^}'_DIR_[0-9]+=' | cut -d= -f2-))
    
        for dir in "${configdirs[@]}" "${userdirs[@]}"; do
           # Calculate dirname
           dirname=$(echo "$dir" | sed 's|^/\([^/]*/\)\{'${stripnum}'\}|/|')
           [ "$diname" == "$dir" ] && dirname="$(basename $dir)"

           newdir="/${storage}${dirname}"
    
           echo -en "$storage"
           print_spaces $storage 10
           echo -en "$dir"
           print_spaces $dir 48
    
           # Create parent folder if not exist, and copy permissions
           if [ ! -d $(dirname $newdir) ]; then
               echo -n '(mkdir) '
               parentnewdir=$(dirname $newdir)
               i="$parentnewdir"
               until [ -d $i ]; do parentnewdir=$i; i=$(dirname $i); done
               rootdir="$(echo $dir| grep -oP '^(/[^/]*){'${stripnum}'}')"
               rootdir="${rootdir:-$(dirname $dir)}"
               parentdir=$(echo $parentnewdir | sed "s|^${storage}|${rootdir}|")

               mkdir -p $(dirname $newdir)
               chown -R --reference=$parentdir $parentnewdir || exit 1
               chmod -R --reference=$parentdir $parentnewdir || exit 1
           fi

           # Copy target
           if [ ! -e ${newdir} ] && [ -e ${dir} ]; then
               echo -n '(copy) '
               cp -ar $(readlink -f $dir) ${newdir} || exit 1
           fi
    
           # If $dir is symbolyc link
           if [ -L $dir ]; then
               linkdir="$(readlink $dir)"
               if [ "$linkdir" != "$newdir" ]; then
                   echo -n '(skip) '
                   rm -f $dir
                   rm -rf $linkdir
                   ln -s $newdir $dir || exit 1
                   ln -s $newdir $linkdir || exit 1
               fi
           else
               echo -n '(link) '
               mv $dir $dir.dist
               ln -s $newdir $dir || exit 1
           fi
           echo
    
        done
    done
    echo "--------------------------------------------------------------------------------"
fi
